// Generated by CoffeeScript 1.6.3
var Feed;

Feed = require('../models/feed');

module.exports.all = function(req, res) {
  return Feed.all(function(err, feeds) {
    var errorMsg;
    if (err) {
      console.log(err);
      errorMsg = "Server error occured while retrieving data.";
      return res.send({
        error: true,
        msg: errorMsg
      });
    } else {
      return res.send(feeds);
    }
  });
};

module.exports.create = function(req, res) {
  var _this = this;
  return Feed.create(req.body, function(err, feed) {
    if (err) {
      return res.send({
        error: true,
        msg: "Server error while creating feed."
      }, 500);
    } else {
      return res.send(feed);
    }
  });
};

module.exports.destroy = function(req, res) {
  return Feed.find(req.params.id, function(err, feed) {
    if ((err != null) || (feed == null)) {
      return res.send({
        error: true,
        msg: "Feed not found"
      }, 404);
    } else {
      return feed.destroy(function(err) {
        if (err) {
          console.log(err);
          return res.send({
            error: 'Cannot destroy feed'
          }, 500);
        } else {
          return res.send({
            success: 'Feed succesfuly deleted'
          });
        }
      });
    }
  });
};

module.exports.update = function(req, res) {
  return Feed.find(req.params.id, function(err, feed) {
    var _this = this;
    if ((err != null) || (feed == null)) {
      return res.send({
        error: true,
        msg: "Feed not found"
      }, 404);
    } else {
      ['title', 'last', 'content'].forEach(function(field) {
        if (field === 'title' || field === 'last') {
          if (req.body[field] != null) {
            return feed[field] = req.body[field];
          }
        }
      });
      return feed.update(req.params, function(err) {
        if (err != null) {
          console.log(err);
          return res.send({
            error: 'Cannot update feed'
          }, 500);
        } else {
          return res.send(feed);
        }
      });
    }
  });
};
